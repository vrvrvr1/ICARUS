<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Icarus Wear - Apparel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="css/products.css">
  <style>
    /* product badge styles for listing grid */
    .product-card{ position:relative; }
    .product-badges{ position:absolute; top:8px; left:8px; display:flex; flex-direction:column; gap:6px; z-index:10; }
  .product-badges .badge-new, .discount-badge { font-size:12px; padding:6px 8px; border-radius:6px; color:#fff; font-weight:700; text-transform:uppercase; display:inline-flex; align-items:center; gap:6px; }
  .product-badges .badge-new{ background:#ff6b6b; }
    .discount-badge{ background:#111827; }
    .product-badges i { font-size:14px; line-height:1; }
    .visually-hidden { position: absolute !important; width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important; }
  </style>
</head>
<body>

    <!-- Header -->
    <%- include ("../partials/header.ejs") %>

<!-- Breadcrumb -->
<%
  // Friendly category label (e.g. 'men' -> 'Men')
  const prettyCategory = (typeof currentCategory !== 'undefined' && currentCategory)
    ? (currentCategory.charAt(0).toUpperCase() + currentCategory.slice(1))
    : null;
%>
<nav aria-label="breadcrumb" class="breadcrumb-wrap">
  <ol class="breadcrumb" itemscope itemtype="http://schema.org/BreadcrumbList">
    <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem" class="breadcrumb-item">
      <a href="/" itemprop="item"><span itemprop="name">Home</span></a>
      <meta itemprop="position" content="1" />
    </li>
    <% if (prettyCategory) { %>
      <!-- If a category is active, show it as the current page (no extra 'Products' breadcrumb) -->
      <li class="breadcrumb-item current" aria-current="page" itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
        <span itemprop="name"><%= prettyCategory %></span>
        <meta itemprop="position" content="2" />
      </li>
    <% } else { %>
      <!-- Default: listing page itself -->
      <li class="breadcrumb-item current" aria-current="page">
        <span>Products</span>
      </li>
    <% } %>
  </ol>
</nav>

     <!-- Notification container (add this right after header) -->
  <div id="cart-notification" style="
      position: fixed;
      top: 20px;
      right: 20px;
      background: #28a745;
      color: white;
      padding: 12px 20px;
      border-radius: 6px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
      display: none;
      z-index: 9999;
      font-weight: bold;
  ">
    Added to cart!
  </div>
    
     <nav class="navbar d-none">
    <ul>
      <li><a href="#" class="tab-link active" data-tab="mens">Mens Apparel</a></li>
      <li><a href="#" class="tab-link" data-tab="womens">Womens Apparel</a></li>
      <li><a href="#" class="tab-link" data-tab="unisex">Unisex Apparel</a></li>
      <li><a href="#" class="tab-link" data-tab="accessories">Gym Accessories</a></li>
      <li><a href="#" class="tab-link" data-tab="bags">Bags</a></li>
      <li><a href="#" class="tab-link" data-tab="outdoor">Outdoor & Athleisure</a></li>
      <li><a href="#" class="tab-link" data-tab="everyday">Everyday Athleisure</a></li>
      <li><a href="#" class="tab-link" data-tab="seasonal">Seasonal Performance Wear</a></li>
    </ul>
  </nav>

  <div class="page-container">
    <div class="container">
      <!-- Sidebar -->
<aside class="filter">
  <h3>Filter</h3>
  <!-- Ratings Slider -->
<div class="rating-slider">
  <label>Rating</label>
  <div class="slider-track" id="ratingTrack"></div>
  <input type="range" id="minRating" min="1" max="5" step="0.1" value="1">
  <input type="range" id="maxRating" min="1" max="5" step="0.1" value="5">
  <span class="slider-value" id="minRatingVal">1</span>
  <span class="slider-value" id="maxRatingVal">5</span>
</div>


<!-- Price Slider -->
<div class="price-slider">
  <label>Price</label>
  <div class="slider-container">
    <div class="slider-track" id="priceTrack"></div>
    <input type="range" id="minPrice" min="1" max="50" value="1">
    <input type="range" id="maxPrice" min="1" max="50" value="50">
  </div>
  <div class="price-values">
    <span id="minPriceVal">$1</span> - <span id="maxPriceVal">$50</span>
  </div>
</div>

  <!-- Colors -->
  <label>Color</label>
  <div class="colors">
    <span data-color="red" title="Red"></span>
    <span data-color="blue" title="Blue"></span>
    <span data-color="black" title="Black"></span>
    <span data-color="green" title="Green"></span>
  </div>

  <!-- Sizes -->
  <label>Sizes</label>
  <div class="sizes">
    <button type="button" data-size="S">S</button>
    <button type="button" data-size="M">M</button>
    <button type="button" data-size="L">L</button>
    <button type="button" data-size="XL">XL</button>
  </div>

  <button id="applyFilter">Apply Filter</button>
</aside>

      <!-- Products -->
      <main class="content">
        
<!-- Dynamic product sections for each category tab -->
<%
  const CATEGORY_LIST = ['Mens','Womens','Unisex','Accessories','Bags','Outdoor','Everyday','Seasonal'];
%>
<% CATEGORY_LIST.forEach((cat, idx) => { %>
  <% const sectionId = (cat || '').toLowerCase(); %>
  <section id="<%= sectionId %>" class="tab-content <%= idx === 0 ? 'active' : '' %>">
    <h2><%= cat %> Apparel</h2>
    <div class="product-grid">
      <% const catProducts = (products || []).filter(p => (p.category || '').toLowerCase() === (cat || '').toLowerCase()); %>
      <% if (catProducts.length > 0) { %>
        <% catProducts.forEach(p => { %>
          <div class="product-card">
            <a href="/products/<%= p.id %>" class="card-link">
              <% const _isNew = !!p.is_new; %>
              <% if (p.promo_active && Number(p.promo_percent || 0) > 0) { %>
                <div class="discount-badge">-<%= Number(p.promo_percent) %>%</div>
              <% } %>
              <% if (_isNew) { %>
                <div class="product-badges" aria-hidden="false">
                  <div class="badge-new" role="status" aria-label="New product">
                    <i class="bi bi-star-fill" aria-hidden="true"></i>
                    <span class="badge-text">NEW</span>
                    <span class="visually-hidden">New product</span>
                  </div>
                </div>
              <% } %>
              <img src="<%= p.image_url %>" alt="<%= p.name %>">
              <div class="product-price">
                <% const __p = Number(p.price || 0); const __pp = Number(p.promo_percent || 0); const __on = !!p.promo_active && __pp > 0; const __pd = __on ? (__p * (1 - (__pp/100))) : __p; %>
                <% if (__on) { %>
                  <span class="price-new">$<%= __pd.toFixed(2) %></span>
                  <span class="price-old">$<%= __p.toFixed(2) %></span>
                <% } else { %>
                  <span class="price-new">$<%= __p.toFixed(2) %></span>
                <% } %>
              </div>
              <div class="product-name"><%= p.name %></div>
              <div class="sold-count">Sold <%= Number(p.sold || 0).toLocaleString() %></div>
              <div class="colors">
                <% 
                  const colorArray = Array.isArray(p.variant_colors) && p.variant_colors.length
                    ? p.variant_colors
                    : (p.colors ? p.colors.split(',').map(c => c.trim().toLowerCase()).filter(Boolean) : []);
                  let colorSpans = '';
                  colorArray.forEach(color => { colorSpans += '<span style="background-color:' + color + ';"></span>'; });
                %>
                <%- colorSpans %>
              </div>
              <div class="bottom-row">
                <div class="rating">
                  <i class="bi bi-star-fill" style="color: black;"></i>
                  <span class="rating-value"><%= p.rating %></span>
                  <span class="review-count">(<%= p.reviews %>)</span>
                </div>
            </a>
            <button class="wishlist-btn" data-id="<%= p.id %>">
              <% if (p.wishlisted) { %>
                <i class="bi bi-heart-fill"></i>
              <% } else { %>
                <i class="bi bi-heart"></i>
              <% } %>
            </button>
            </div>
          </div>
        <% }) %>
      <% } else { %>
        <p>No products available.</p>
      <% } %>
    </div>
  </section>
<% }) %>

    <script src="js/filter.js"></script>
    <script src="js/wishlist.js"></script>
  <!-- JS for tab switching -->
<script>
const tabs = document.querySelectorAll('.tab-link');
const contents = document.querySelectorAll('.tab-content');

// ------------------
// Tab switching
// ------------------
function activateTab(tabId) {
  tabs.forEach(t => t.classList.remove('active'));
  contents.forEach(c => c.classList.remove('active'));
  const tab = document.querySelector(`.tab-link[data-tab="${tabId}"]`);
  if (tab) {
    tab.classList.add('active');
    document.getElementById(tabId).classList.add('active');
  }
}

const params = new URLSearchParams(window.location.search);
const category = params.get('category');
const categoryToSection = {
  men: 'mens',
  women: 'womens',
  unisex: 'unisex',
  accessories: 'accessories',
  bags: 'bags',
  outdoor: 'outdoor',
  everyday: 'everyday',
  seasonal: 'seasonal'
};

if (category && categoryToSection[category]) {
  activateTab(categoryToSection[category]);
} else {
  activateTab('mens');
}

tabs.forEach(tab => {
  tab.addEventListener('click', (e) => {
    const targetId = tab.dataset.tab;
    if (targetId) {
      e.preventDefault();
      activateTab(targetId);
    }
  });
});

// Header already defines window.updateCartCount; avoid redefining here

// ------------------
// Add-to-cart forms
// ------------------
document.querySelectorAll('.add-to-cart-form').forEach(form => {
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const data = Object.fromEntries(new FormData(form).entries());
    try {
      // Preflight: if the header exposes an appFlags banned flag, respect it client-side
      const appFlags = document.getElementById('appFlags');
      if (appFlags && appFlags.dataset && appFlags.dataset.banned === 'true') {
        // show existing error modal if available
        if (typeof showErrorModal === 'function') {
          showErrorModal('Account banned', 'Your account has been banned. Contact support for help.');
        } else {
          alert('Your account has been banned. Contact support.');
        }
        return;
      }

      const res = await fetch('/cart/add', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify(data)
      });

      if (!res.ok) {
        // try parse json error
        try {
          const json = await res.json();
          if (json && json.error === 'account_banned') {
            if (typeof showErrorModal === 'function') {
              showErrorModal('Account banned', json.message || 'Your account has been banned.');
            } else {
              alert(json.message || 'Your account has been banned.');
            }
            return;
          }
          // other known errors can be handled here
          console.error('Add to cart failed:', json);
        } catch (parseErr) {
          console.error('Add to cart failed with status', res.status);
        }
        return;
      }

      if (window.updateCartCount) window.updateCartCount();
      try { localStorage.setItem('cart-tick', String(Date.now())); } catch(_) {}
      const notif = document.getElementById('cart-notification');
      notif.innerText = `${data.product_name} added to cart!`;
      notif.style.display = 'block';
      setTimeout(() => notif.style.display = 'none', 2000);
    } catch (err) {
      console.error(err);
    }
  });
});

// ------------------
// Wishlist toggle
// ------------------

</script>

<style>
  .sold-count{ color:#6b7280; font-size:12px; margin-top:2px; }
</style>

</body>
</html>