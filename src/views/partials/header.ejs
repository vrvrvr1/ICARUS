<% const cartVisible = (typeof cartItemCount !== 'undefined' && cartItemCount > 0); %>

<head>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css"  integrity="sha384-sRIl4kxILFvY47J16cr9ZwB07vP4J8+LH7qKQnuqkuIAvNWLzeN8tE5YBujZqJLB" crossorigin="anonymous">
    <link rel="stylesheet" href="css/header.css">
</head>
<!-- Promo Bar -->
    <div class="promo-bar">
        <div class="promo-content">
            <span class="arrow">‚Üê</span>
            <span>Spend $125, Get a Free Hiking Pack!</span>
            <span class="arrow">‚Üí</span>
        </div>
    </div>

<!-- Header -->
<header class="header">
  <div class="header-content">
    <nav class="top-nav">
      <!-- Left: Main nav -->
      <div class="main-nav">
        <a href="#categories" class="nav-item" data-category="gym">Gym Activewear</a>
        <a href="#categories" class="nav-item" data-category="men">Gym Accessories</a>
        <a href="#categories" class="nav-item" data-category="women">Outdoor and Athleisure Apparel</a>
      </div>
      
      <!-- Center: Logo -->
      <a href="/homepage" class="logo">
        <img src="image/logo.png" alt="Icarus Wear Logo">
      </a>

      <!-- Right: Icons -->
      <div class="header-actions d-flex gap-4">
      <a href="#" 
        class="search-icon text-dark fs-4" 
        data-bs-toggle="modal" 
        data-bs-target="#searchModal">
        <i class="bi bi-search"></i>
      </a>
        <a href="/accountsettings" class="user-icon text-dark fs-4"><i class="bi bi-person-circle"></i></a>

    <a href="/cart" class="cart-icon position-relative text-dark fs-4">
      <i class="bi bi-cart3"></i>
      <span id="cart-count" 
            class="cart-badge position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger <%= (cartItemCount && cartItemCount > 0) ? '' : 'hidden' %>">
        <%= cartItemCount || '' %>
      </span>
    </a>

      </div>
    </nav>
  </div>
</header>

<!-- Sub Navigation -->
<div class="sub-nav" id="subNav">
    <div class="sub-nav-content" id="subNavContent">
    </div>
</div>
</header>
</div>

<!-- Trigger -->
<a href="#" class="search-icon text-dark fs-4" data-bs-toggle="modal" data-bs-target="#searchModal">
</a>

<!-- Modal -->
<div class="modal fade" id="searchModal" tabindex="-1">
  <div class="modal-dialog modal-lg">
    <div class="modal-content p-3">
      <input type="text" id="searchInput" class="form-control mb-3" placeholder="Search products...">
      <ul id="searchResults" class="list-group"></ul>
    </div>
  </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js" integrity="sha384-FKyoEForCGlyvwx9Hj09JcYn3nv7wiPVlz7YYwJrWVcXK/BmnVDxM+D2scQbITxI" crossorigin="anonymous"></script>
<script src="js/promo.js"></script>
<script src="js/search.js"></script>
<script>  
    // Navigation data for different categories
const navData = {
    gym: [
        { icon: 'üèãÔ∏è', text: 'Men Fitness Apparel', url: '/products?category=men' },
        { icon: 'üí™', text: 'Women Fitness Apparel', url: '/products?category=women' },
        { icon: 'üèÉ‚Äç‚ôÇÔ∏è', text: 'Unisex Fitness Apparel', url: '/products?category=unisex' },
    ],
    men: [
        { icon: 'üëï', text: 'Strap, Gloves, and Accessories', url: '/products?category=accessories' },
        { icon: 'üëü', text: 'Toning Equipment', url: '/products?category=equipment' },
        { icon: 'üéΩ', text: 'Bags', url: '/products?category=bags' },
    ],
    women: [
        { icon: 'üëö', text: 'Outdoor Essentials', url: '/products?category=outdoor' },
        { icon: 'üë†', text: 'Everyday Athleisure', url: '/products?category=everyday' },
        { icon: 'ü©±', text: 'Seasonal Performance Wear', url: '/products?category=seasonal' },
    ],
};
        // Get DOM elements
        const navItems = document.querySelectorAll('.nav-item');
        const subNav = document.getElementById('subNav');
        const subNavContent = document.getElementById('subNavContent');
        let currentCategory = 'gym';

        // Initialize with gym category
        updateSubNav('gym');

        // Add event listeners
        navItems.forEach(item => {
            item.addEventListener('mouseenter', () => {
                const category = item.getAttribute('data-category');
                if (category !== currentCategory) {
                    currentCategory = category;
                    updateSubNav(category);
                }
            });
        });

        // Keep sub-nav open when hovering over it
        subNav.addEventListener('mouseenter', () => {
            subNav.classList.add('active');
        });

        subNav.addEventListener('mouseleave', () => {
            subNav.classList.remove('active');
        });

        // Show sub-nav when hovering over main nav
        document.querySelector('.main-nav').addEventListener('mouseenter', () => {
            subNav.classList.add('active');
        });

        document.querySelector('.main-nav').addEventListener('mouseleave', () => {
            setTimeout(() => {
                if (!subNav.matches(':hover')) {
                    subNav.classList.remove('active');
                }
            }, 100);
        });

function updateSubNav(category) {
    const items = navData[category];
    subNavContent.innerHTML = '';
    
    items.forEach((item, index) => {
        const subNavItem = document.createElement('a');
        subNavItem.href = item.url; // Use the url property
        subNavItem.className = 'sub-nav-item';
        subNavItem.style.animationDelay = `${index * 0.1}s`;
        subNavItem.innerHTML = `
            <span class="sub-nav-icon">${item.icon}</span>
            <span>${item.text}</span>
        `;
        subNavContent.appendChild(subNavItem);
    });
}
const badge = document.getElementById("cart-count");

async function updateCartCount() {
  try {
    const res = await fetch("/cart/count");
    const data = await res.json();

    if (data.count > 0) {
      badge.innerText = data.count;
      badge.style.opacity = 1; // show smoothly
      badge.classList.add("animate");
      setTimeout(() => badge.classList.remove("animate"), 300);
    } else {
      badge.style.opacity = 0; // hide when empty
    }
  } catch (err) {
    console.error(err);
  }
}




  </script>