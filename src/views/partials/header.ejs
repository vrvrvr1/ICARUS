<% const cartVisible = (typeof cartItemCount !== 'undefined' && cartItemCount > 0); %>
<!-- Global font (Poppins) and base styles -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="/css/global.css">
<link rel="stylesheet" href="/css/header.css">
<!-- Bootstrap CSS and Icons for consistent header/modal styling -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
<!-- Promo Bar -->
    <div class="promo-bar">
        <div class="promo-content">
            <span class="arrow">‚Üê</span>
            <span>Spend $125, Get a Free Hiking Pack!</span>
            <span class="arrow">‚Üí</span>
        </div>
    </div>

<!-- Header -->
<span id="appFlags" data-guest="<%= (typeof user !== 'undefined' && user && user.id) ? 'false' : 'true' %>" data-banned="<%= (typeof user !== 'undefined' && user && user.is_banned) ? 'true' : 'false' %>" hidden></span>
<header class="header">
  <div class="header-content">
    <nav class="top-nav">
      <!-- Left: Main nav -->
      <div class="main-nav">
        <a href="#categories" class="nav-item" data-category="gym">Gym Activewear</a>
        <a href="#categories" class="nav-item" data-category="men">Gym Accessories</a>
        <a href="#categories" class="nav-item" data-category="women">Outdoor and Athleisure Apparel</a>
      </div>
      
      <!-- Center: Logo -->
      <a href="/homepage" class="logo">
        <img src="/image/logo.png" alt="Icarus Wear Logo">
      </a>

      <!-- Right: Icons -->
      <div class="header-actions d-flex gap-4">
      <a href="#" 
        class="search-icon text-dark fs-4" 
        data-bs-toggle="modal" 
        data-bs-target="#searchModal">
        <i class="bi bi-search"></i>
      </a>
        <a href="/accountsettings" class="user-icon text-dark fs-4"><i class="bi bi-person-circle"></i></a>

    <!-- Notifications -->
    <a href="/notifications" class="notif-icon position-relative text-dark fs-4" aria-label="Notifications">
      <i class="bi bi-bell-fill"></i>
      <span id="notif-count"
            class="cart-badge position-absolute top-0 start-100 translate-middle hidden"
            aria-live="polite"></span>
    </a>

    <a href="/cart" class="cart-icon position-relative text-dark fs-4" aria-label="Cart">
      <i class="bi bi-cart3"></i>
  <span id="cart-count" 
    class="cart-badge position-absolute top-0 start-100 translate-middle <%= (cartItemCount && cartItemCount > 0) ? '' : 'hidden' %>">
        <%= cartItemCount || '' %>
      </span>
    </a>

      </div>
    </nav>
  </div>
</header>

<% if (typeof notice !== 'undefined' && notice) { %>
  <style>
    /* Centered green notice toast */
    #noticeToast {
      position: fixed;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      background: linear-gradient(90deg,#16a34a,#059669); /* green gradient */
      color: #fff;
      padding: 10px 16px;
      border-radius: 12px;
      backdrop-filter: blur(6px);
      box-shadow: 0 10px 30px rgba(2,6,23,0.6);
      z-index: 99999;
      display: inline-flex;
      align-items: center;
      gap: 12px;
      font-weight: 600;
      max-width: 92%;
      width: auto;
      min-width: 260px;
      justify-content: center;
    }
    #noticeToast span { color: #ffffff; }
    #dismissNotice {
      background: rgba(255,255,255,0.12);
      border: none;
      color: #fff;
      cursor: pointer;
      font-size: 14px;
      padding: 6px 8px;
      border-radius: 6px;
    }
    #dismissNotice:hover { background: rgba(255,255,255,0.18); }
  </style>

  <div id="noticeToast" aria-live="polite" role="status">
    <span><%= notice %></span>
    <button id="dismissNotice" aria-label="Dismiss notice">‚úï</button>
  </div>
  <script>
    (function(){
      const t = document.getElementById('noticeToast');
      const b = document.getElementById('dismissNotice');
      if (!t) return;
      // auto hide
      const hide = () => { if (t && t.remove) t.remove(); };
      const timer = setTimeout(hide, 3500);
      b.addEventListener('click', () => { clearTimeout(timer); hide(); });
    })();
  </script>
<% } %>

<!-- Sub Navigation -->
<div class="sub-nav" id="subNav">
    <div class="sub-nav-content" id="subNavContent">
    </div>
  </div>

<!-- Trigger intentionally removed; use the header search icon button instead -->

<!-- Modal -->
<div class="modal fade" id="searchModal" tabindex="-1">
  <div class="modal-dialog modal-lg">
    <div class="modal-content p-3">
      <input type="text" id="searchInput" class="form-control mb-3" placeholder="Search products...">
      <ul id="searchResults" class="list-group"></ul>
    </div>
  </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.8/dist/js/bootstrap.bundle.min.js" integrity="sha384-FKyoEForCGlyvwx9Hj09JcYn3nv7wiPVlz7YYwJrWVcXK/BmnVDxM+D2scQbITxI" crossorigin="anonymous"></script>
<script src="/js/promo.js"></script>
<script src="/js/search.js"></script>
<script>  
    // Navigation data for different categories
const navData = {
    gym: [
        { icon: 'üèãÔ∏è', text: 'Men Fitness Apparel', url: '/products?category=men' },
        { icon: 'üí™', text: 'Women Fitness Apparel', url: '/products?category=women' },
        { icon: 'üèÉ‚Äç‚ôÇÔ∏è', text: 'Unisex Fitness Apparel', url: '/products?category=unisex' },
    ],
    men: [
        { icon: 'üëï', text: 'Strap, Gloves, and Accessories', url: '/products?category=accessories' },
        { icon: 'üëü', text: 'Toning Equipment', url: '/products?category=equipment' },
        { icon: 'üéΩ', text: 'Bags', url: '/products?category=bags' },
    ],
    women: [
        { icon: 'üëö', text: 'Outdoor Essentials', url: '/products?category=outdoor' },
        { icon: 'üë†', text: 'Everyday Athleisure', url: '/products?category=everyday' },
        { icon: 'ü©±', text: 'Seasonal Performance Wear', url: '/products?category=seasonal' },
    ],
};
        // Get DOM elements
        const navItems = document.querySelectorAll('.nav-item');
        const subNav = document.getElementById('subNav');
        const subNavContent = document.getElementById('subNavContent');
        let currentCategory = 'gym';

        // Initialize with gym category
        updateSubNav('gym');

        // Add event listeners
        navItems.forEach(item => {
            item.addEventListener('mouseenter', () => {
                const category = item.getAttribute('data-category');
                if (category !== currentCategory) {
                    currentCategory = category;
                    updateSubNav(category);
                }
            });
        });

        // Keep sub-nav open when hovering over it
        subNav.addEventListener('mouseenter', () => {
            subNav.classList.add('active');
        });

        subNav.addEventListener('mouseleave', () => {
            subNav.classList.remove('active');
        });

        // Show sub-nav when hovering over main nav
        document.querySelector('.main-nav').addEventListener('mouseenter', () => {
            subNav.classList.add('active');
        });

        document.querySelector('.main-nav').addEventListener('mouseleave', () => {
            setTimeout(() => {
                if (!subNav.matches(':hover')) {
                    subNav.classList.remove('active');
                }
            }, 100);
        });

function updateSubNav(category) {
    const items = navData[category];
    subNavContent.innerHTML = '';
    
    items.forEach((item, index) => {
        const subNavItem = document.createElement('a');
        subNavItem.href = item.url; // Use the url property
        subNavItem.className = 'sub-nav-item';
        subNavItem.style.animationDelay = `${index * 0.1}s`;
        subNavItem.innerHTML = `
            <span class="sub-nav-icon">${item.icon}</span>
            <span>${item.text}</span>
        `;
        subNavContent.appendChild(subNavItem);
    });
}
const badge = document.getElementById("cart-count");
const notifBadge = document.getElementById("notif-count");

async function updateCartCount() {
  try {
    const res = await fetch("/cart/count");
    const data = await res.json();

    const count = Number(data.count || 0);
    const label = count > 99 ? '99+' : String(count);
    if (count > 0) {
      badge.textContent = label;
      badge.classList.remove('hidden');
      badge.style.opacity = 1;
      badge.classList.add('animate');
      setTimeout(() => badge.classList.remove('animate'), 350);
    } else {
      badge.classList.add('hidden');
    }
  } catch (err) {
    console.error(err);
  }
}

// Expose globally so product pages can invoke after add-to-cart
window.updateCartCount = updateCartCount;

// Refresh on load and when tab becomes visible
document.addEventListener('visibilitychange', () => {
  if (document.visibilityState === 'visible') updateCartCount();
});
document.addEventListener('DOMContentLoaded', () => updateCartCount());

// Light cross-tab signal: when someone writes to localStorage key, refresh
window.addEventListener('storage', (e) => {
  if (e && e.key === 'cart-tick') updateCartCount();
});

// --- Notifications badge (best-effort; safe if API is missing) ---
async function updateNotifCount() {
  if (!notifBadge) return;
  try {
    const res = await fetch('/notifications/count', { credentials: 'same-origin' });
    if (!res.ok) throw new Error('no endpoint');
    const data = await res.json().catch(()=>({}));
    const count = Number(data.count || 0);
    const label = count > 99 ? '99+' : String(count);
    if (count > 0) {
      notifBadge.textContent = label;
      notifBadge.classList.remove('hidden');
      notifBadge.style.opacity = 1;
    } else {
      notifBadge.classList.add('hidden');
      notifBadge.textContent = '';
    }
  } catch(_) {
    // Hide badge if endpoint not available; icon remains clickable
    notifBadge.classList.add('hidden');
    notifBadge.textContent = '';
  }
}
window.updateNotifCount = updateNotifCount;
document.addEventListener('visibilitychange', () => {
  if (document.visibilityState === 'visible') updateNotifCount();
});
document.addEventListener('DOMContentLoaded', () => updateNotifCount());
window.addEventListener('storage', (e) => {
  if (e && e.key === 'notif-tick') updateNotifCount();
});




  </script>

<!-- Login Prompt Modal for guest users -->
<div class="modal fade" id="loginPromptModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header justify-content-center">
        <h5 class="modal-title text-center w-100 m-0">Welcome to ICARUS Wear</h5>
      </div>
      <div class="modal-body">
        <p class="text-muted mb-3">Create an account or log in to save your cart, track orders, and get exclusive deals.</p>
        <form id="loginPromptForm" action="/login" method="POST">
          <div class="mb-3">
            <label for="lpEmail" class="form-label">Email</label>
            <input id="lpEmail" type="email" name="email" class="form-control" placeholder="you@example.com" required>
          </div>
          <div class="mb-3">
            <label for="lpPassword" class="form-label">Password</label>
            <div class="input-group">
              <input id="lpPassword" type="password" name="password" class="form-control" placeholder="Enter your password" required>
              <button type="button" class="btn btn-outline-secondary" id="lpTogglePw" aria-label="Toggle password visibility">
                <i class="bi bi-eye"></i>
              </button>
            </div>
          </div>
          <div class="d-flex justify-content-end gap-2">
            <button type="button" class="btn btn-light" data-bs-dismiss="modal">Maybe later</button>
            <button type="submit" class="btn btn-primary">Log in</button>
          </div>
        </form>
        <div class="text-center mt-3 small">Don't have an account? <a href="/signup" class="link-primary">Sign up</a></div>
      </div>
    </div>
  </div>
  </div>

<script>
  (function(){
    // Only prompt guests, and avoid login/signup pages
    const flagsEl = document.getElementById('appFlags');
    const isGuest = flagsEl && flagsEl.getAttribute('data-guest') === 'true';
    const path = (location.pathname || '').toLowerCase();
    if (!isGuest) return;
    if (['/login','/signup','/verify'].includes(path)) return;

    const modalEl = document.getElementById('loginPromptModal');
    if (!modalEl || !window.bootstrap) return;
  const modal = new bootstrap.Modal(modalEl);
  const INTERVAL_MS = 20000; // 20 seconds

    function showPrompt(){
      try{
        const now = Date.now();
        const last = Number(localStorage.getItem('loginPromptLastShown') || 0);
        if (now - last < INTERVAL_MS - 500) return; // throttle at least 1 min
        localStorage.setItem('loginPromptLastShown', String(now));
      }catch(e){ /* ignore storage errors */ }
      modal.show();
    }

  // Schedule every 20 seconds
    setInterval(showPrompt, INTERVAL_MS);

    // Password visibility toggle
    const toggle = document.getElementById('lpTogglePw');
    if (toggle){
      toggle.addEventListener('click', () => {
        const pw = document.getElementById('lpPassword');
        const icon = toggle.querySelector('i');
        const isText = pw.type === 'text';
        pw.type = isText ? 'password' : 'text';
        icon.classList.toggle('bi-eye', isText);
        icon.classList.toggle('bi-eye-slash', !isText);
      });
    }
  })();
</script>